plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.this_could_be_changed'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security' 20240207 일시적으로 해제
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    //implementation 'io.micrometer:micrometer-tracing'
    //implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    //implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    //cloud stream
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

    //querydsl
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    compileOnly 'org.projectlombok:lombok'
    //    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.google.code.gson:gson'

    // redis
    implementation 'io.lettuce:lettuce-core:6.2.4.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.1.3'

    // sl4j
    implementation 'org.slf4j:slf4j-api:2.0.7'

    // micrometer prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:latest.release'

    // csv
    implementation 'com.opencsv:opencsv:5.7.1'

    // bucket4j
    implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.5.0'

    // Caffeine Cache
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

sourceSets {
    main.java.srcDir querydslDir
}

//delete file(querydslDir)

clean.doLast {
    file(querydslDir).deleteDir()
}